Import('env')

print "Converting binary assets into C/ASM..." #Fix so printed at right time...

#Look for the assets in the top-level assets directory! I may remove this
env.VariantDir(Dir('.'), '#/assets', duplicate=False)

gfx_assets_orig = Glob('graphics/[!g]*.c') #The 'g' prefix indicates GENERATED C files.
#gfx_assets_orig = Glob('graphics/[!g]*.*[!~]') #Note that some of the original assets
#ARE in C- not ALL assets need to be run through a conversion!
music_assets_orig = Glob('music/*')

orig_assets = gfx_assets_orig + music_assets_orig
generated_assets = env.BuildAssets(orig_assets)

if 'assets' in COMMAND_LINE_TARGETS:
	print "If -c specified, will clean files generated from assets."
	#env.Clean(generated_assets, [generated_assets])
else:
	env.NoClean([generated_assets]) #Don't clean the final library output/object files.

Return('generated_assets')

